name: .NET

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
      - Application/**
      - .github/workflows/dotnet.yml
  pull_request:
    branches: [ master ]
    paths:
      - Application/**
      - .github/workflows/dotnet.yml
env:
  registryName: xayodevopsreg.azurecr.io
  repositoryName: wht/dotnetcoreapp
  dockerFolderPath: Application/src/RazorPagesTestSample
  tag: ${github.run_number}

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Application/src/RazorPagesTestSample
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore *.csproj
    - name: Build
      run: dotnet build --no-restore *.csproj
    - name: Test
      run: dotnet test --verbosity normal ../../tests/RazorPagesTestSample.Tests
      
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
            let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
              body: body
            });
            
  docker-image:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Application/src/RazorPagesTestSample
    steps:
    - uses: actions/checkout@v2
    - name: Login Docker
      run: docker $registryName -u ACR_USERNAME -p ACR_PASSWORD
    - name: Docker Build
      run: docker build -t $registryName/$repositoryName:$tag --build-arg build_version=$tag $dockerFolderPath
    - name: Docker push
      run: docker push $registryName/$repositoryName:$tag
